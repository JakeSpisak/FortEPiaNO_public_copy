#### Number and type of neutrinos
#number of neutrinos:
flavorNumber = 3

#define weight of each neutrino and if it is or not a sterile:
#nuFactor? = ...
#sterile? = T/F
#default: is (factor, sterile)=(1, F) for the first three neutrinos, (0, T) otherwise
nuFactor1=1
nuFactor2=1
nuFactor3=1
sterile1=F
sterile2=F
sterile3=F

#### Neutrino oscillation parameters
##if givesinsq is T, the values of the following thetaij are not the mixing angles, but their sin^2
givesinsq=T
##for any mixing angle, use the syntax:
#thetaij = ...
#with j>i

## for any mass splitting, use the syntax:
#dmji = ...
#with j>i

####comment to use the default values, from
#PDG 2018: M. Tanabashi et al. (Particle Data Group), Phys.Rev.D, 98, 030001 (2018).
##2nu mixing parameters
theta12= 0.297
dm21 = 7.37e-05
##additional 3nu mixing parameters
theta13 = 0.0215
theta23 = 0.425
#use negative value for inverted ordering:
dm31 = 0.00256

#### Interactions settings
#what to do with terms in collision matrix:
# 0: no collision terms,
# 1: full integral off-diagonal,
# 2: damping factors off-diagonal,
# other: only diagonal terms
collision_offdiag = 2
#use finite temperature corrections for the electron mass?
#warning: the code may misbehave if dme2_temperature_corr is .false. and the collision terms are present
dme2_temperature_corr = T
#use the log term in the electromagnetic corrections to the electron mass?
dme2_log_term = T

#### Other settings:
#number of log intervals in x and range:
Nx = 500
x_in = 0.05
x_fin=35

#grid in y
#use the Gauss-Laguerre method for selecting the y grid, instead of a mixture of logarithmic and linear spacing:
use_gauss_laguerre=T
#number of momenta in the grid (for the Gauss-Laguerre method, use Ny<=50):
Ny = 30
#if not using Gauss-Laguerre method, the algorithm will use
# Nylog points in [y_min, y_cen), log-spaced, plus
# Ny-Nylog points in [y_cen, y_max], linearly spaced
Nylog = 10
y_min = 0.01
y_cen = 1
y_max = 20

#folder where to save output files:
outputFolder = output
#do you want to use checkpointing?
checkpoint = T
#save the evolution of the entire neutrino density matrix (disable to save space, useful for grids with many points)
save_nuDens_evolution = T
#save the y grid and the Fermi-Dirac in fd.dat
save_fd = T
#save the evolution of (8/7 rho_nu/rho_gamma) and (8/7 z_id^4 rho_nu/rho_gamma)
save_Neff = T
#save the evolution of the photon temperature z in the output files
save_z_evolution = T
#save the evolution of the effective comoving neutrino temperature w in the output files
#(automatically off if save_z_evolution is .false.)
save_w_evolution = T
#save the evolution of the energy density and entropy for each component
save_energy_entropy_evolution = T

#absolute and relative tolerance in DLSODA:
dlsoda_atol = 1.d-6
dlsoda_rtol = 1.d-6

#select number of threads to use
#(if not given or zero, use all the available threads
#or the number specified in the OMP_NUM_THREADS environment variable)
num_threads=0

#level of verbosity of the code
verbose = 1
#print a message every N calculations of the derivatives:
Nprintderivs = 100
